{"version":3,"sources":["components/Feedback/FeedbackStatistics.module.css","components/Feedback/FeedbackSection.module.css","components/Feedback/FeedbackOptions.module.css","components/Feedback/FeedbackSection.js","components/Feedback/FeedbackOptions.js","components/Notification.js","components/Feedback/FeedbackStatistics.js","App.js","index.js"],"names":["module","exports","FeedbackSection","children","className","s","feedback","FeedbackOptions","options","onLeaveFeedback","optionsBtn","Object","keys","map","option","type","name","onClick","Notification","StatisticsFeedback","good","neutral","bad","total","positivePercentage","statisticText","statisticList","statisticItem","App","state","incrementClick","e","target","setState","prevState","this","totalFeedback","positiveFeedbackPercentage","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,cAAgB,0CAA0C,cAAgB,4C,uBCA5FD,EAAOC,QAAU,CAAC,SAAW,oC,gBCA7BD,EAAOC,QAAU,CAAC,WAAa,sC,sMCUhBC,EATS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,0BAASC,UAAWC,IAAEC,SAAtB,UACE,uDACCH,M,iBCcQI,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAaC,OAAOC,KAAKJ,GAC/B,OACE,qBAAKJ,UAAWC,IAAEK,WAAlB,SACGA,EAAWG,KAAI,SAAAC,GAAM,OACpB,wBACEC,KAAK,SAELC,KAAMF,EACNG,QAASR,EAJX,SAMGK,GAJIA,S,gBCNAI,EAHM,WACnB,OAAO,mDCiCMC,EAhCY,SAAC,GAMrB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,mBAAGpB,UAAWC,IAAEoB,cAAhB,wBACCF,EAAQ,EACP,qCACE,qBAAInB,UAAWC,IAAEqB,cAAjB,UACE,qBAAItB,UAAWC,IAAEsB,cAAjB,kBAAsCP,KACtC,qBAAIhB,UAAWC,IAAEsB,cAAjB,qBAAyCN,KACzC,qBAAIjB,UAAWC,IAAEsB,cAAjB,iBAAqCL,QAGvC,+BACE,qBAAIlB,UAAWC,IAAEsB,cAAjB,mBAAuCJ,KACvC,qBAAInB,UAAWC,IAAEsB,cAAjB,+BACqBH,EADrB,aAMJ,cAAC,EAAD,QCtBFI,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,eAAiB,SAAAC,GACf,IAAQf,EAASe,EAAEC,OAAXhB,KACR,EAAKiB,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBlB,EAAOkB,EAAUlB,GAAQ,Q,4CAI9B,WACE,MAA+BmB,KAAKN,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfQ,EAAmBK,KAAnBL,eAEFM,EAAgBhB,EAAOC,EAAUC,EACjCe,EAA6BC,KAAKC,MAAOnB,EAAOgB,EAAiB,KAEvE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE5B,QAAS2B,KAAKN,MACdpB,gBAAiBqB,IAEnB,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,EACPZ,mBAAoBa,W,GAjCZG,aAwCHZ,ICzCfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f69c1e38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"FeedbackStatistics_statisticList__2ABFc\",\"statisticText\":\"FeedbackStatistics_statisticText__UoFJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackSection_feedback__1Fnxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsBtn\":\"FeedbackOptions_optionsBtn__2wk_0\"};","import s from './FeedbackSection.module.css';\n\nconst FeedbackSection = ({ children }) => {\n  return (\n    <section className={s.feedback}>\n      <h2>Please leave feedback</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default FeedbackSection;\n","import s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const optionsBtn = Object.keys(options);\n  return (\n    <div className={s.optionsBtn}>\n      {optionsBtn.map(option => (\n        <button\n          type=\"button\"\n          key={option}\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","const Notification = () => {\n  return <p>No feedback given</p>;\n};\nexport default Notification;\n","import s from './FeedbackStatistics.module.css';\nimport Notification from '../Notification';\nconst StatisticsFeedback = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <div>\n      <p className={s.statisticText}>Statistics</p>\n      {total > 0 ? (\n        <>\n          <ul className={s.statisticList}>\n            <li className={s.statisticItem}>Good:{good}</li>\n            <li className={s.statisticItem}>Neutral:{neutral}</li>\n            <li className={s.statisticItem}>Bad:{bad}</li>\n          </ul>\n\n          <ul>\n            <li className={s.statisticItem}>Total:{total}</li>\n            <li className={s.statisticItem}>\n              Positive feedback:{positivePercentage}%\n            </li>\n          </ul>\n        </>\n      ) : (\n        <Notification />\n      )}\n    </div>\n  );\n};\n\nexport default StatisticsFeedback;\n","import './App.css';\nimport React, { Component } from 'react';\nimport FeedbackSection from './components/Feedback/FeedbackSection';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport StatisticsFeedback from './components/Feedback/FeedbackStatistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementClick = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { incrementClick } = this;\n\n    const totalFeedback = good + neutral + bad;\n    const positiveFeedbackPercentage = Math.round((good / totalFeedback) * 100);\n\n    return (\n      <FeedbackSection>\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={incrementClick}\n        />\n        <StatisticsFeedback\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalFeedback}\n          positivePercentage={positiveFeedbackPercentage}\n        />\n      </FeedbackSection>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}